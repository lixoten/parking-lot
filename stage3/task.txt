Stage 3/5: Expand and park

Description
Two spots are not enough for a parking lot, so let's increase the number of parking spaces. We'll jump straight to 20 spaces, numbered from 1 to 20. Initially, all the spots are vacant.

When the user wants to park the car, the program should find an available parking spot with the lowest number.

The user can write commands park and leave repeatedly and type exit to end the program.

If the parking lot is full and there's no room, the program should type Sorry, the parking lot is full..

If there are several available spots for a car, the program should always assign the spot with the lowest number.

Example
The symbol > represents the user input. Note that it's not part of the input.

> park KA-01-HH-9999 White
White car parked in spot 1.
> park KA-01-HH-3672 Green
Green car parked in spot 2.
...

> park Rs-P-N-21 Red
Sorry, the parking lot is full.
> leave 1
Spot 1 is free.
> park Rs-P-N-21 Red
Red car parked in spot 1.
> exit
